package com.cegb03.metodos.igu;

import com.cegb03.metodos.igu.LR.A.*;
import com.cegb03.metodos.igu.LR.C.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BoxLayout;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author cegb03
 */
public class Inicio extends javax.swing.JFrame {

    // Crear un JComboBox para seleccionar el Tipo de Localizacion
    JComboBox<String> comboBoxLocRaices = new JComboBox<>();

    // Crear JComboBox para seleccionar el nombre del metodo
    JComboBox<String> comboBoxMetodosDisponibles = new JComboBox<>();
    String[] metodos = {"Biseccion", "Regula Falsi", "Punto Fijo", "Newton-Rapson", "Tangente"};
    
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        comboBoxLocRaices.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                actualizarSeleccion(comboBoxMetodosDisponibles, metodos, comboBoxLocRaices);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnLocRaices = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnLocRaices.setText("Loc Raices");
        btnLocRaices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocRaicesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLocRaices)
                .addContainerGap(294, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLocRaices)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnLocRaicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocRaicesActionPerformed
        comboBoxLocRaices.removeAllItems();
        comboBoxLocRaices.addItem("Metodos Cerrados");
        comboBoxLocRaices.addItem("Metodos Abiertos");

        // Crear un panel para contener los componentes
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Seleccione el tipo:"));
        panel.add(comboBoxLocRaices);
        panel.add(new JLabel("Seleccione el metodo:"));
        panel.add(comboBoxMetodosDisponibles);
        
        // Mostrar el cuadro de diálogo y capturar la respuesta del usuario
        int result = JOptionPane.showConfirmDialog(null, panel, "Ingrese el metodo a usar", JOptionPane.OK_CANCEL_OPTION);
        
        // Verificar si el usuario presionó "Aceptar" (OK)
        if (result == JOptionPane.OK_OPTION) {
            // Obtener el nombre del metodo seleccionado del JComboBox
            String nombreTipoMetodo = (String) comboBoxLocRaices.getSelectedItem();
            // Obtener el metodo seleccionado
            String metodoSelect = (String) comboBoxMetodosDisponibles.getSelectedItem();
            if ( nombreTipoMetodo.equals(comboBoxLocRaices.getItemAt(0)) ){
                if ( metodoSelect.equals(metodos[0]) ){
                    BiseccionFrame biseccion = new BiseccionFrame();
                    biseccion.setVisible(true);
                    biseccion.setLocationRelativeTo(null);
                }
                else if( metodoSelect.equals(metodos[1]) ){
                    RegulaFalsiFrame regulaFalsi = new RegulaFalsiFrame();
                    regulaFalsi.setVisible(true);
                    regulaFalsi.setLocationRelativeTo(null);
                }else
                    JOptionPane.showMessageDialog(this, "No hay metodo coincidente");
            }else if( nombreTipoMetodo.equals(comboBoxLocRaices.getItemAt(1)) ){
                if( metodoSelect.equals(metodos[2]) ){
                    PuntoFijoFrame puntoFijo = new PuntoFijoFrame();
                    puntoFijo.setVisible(true);
                    puntoFijo.setLocationRelativeTo(null);
                }else if( metodoSelect.equals(metodos[3]) ){
                    NewtonRapsonFrame newtonRapson = new NewtonRapsonFrame();
                    newtonRapson.setVisible(true);
                    newtonRapson.setLocationRelativeTo(null);
                }else if( metodoSelect.equals(metodos[4]) ){
                    SecanteFrame secante = new SecanteFrame();
                    secante.setVisible(true);
                    secante.setLocationRelativeTo(null);
                }
            }else
                JOptionPane.showMessageDialog(this, "Ninguna conincidencia entre el tipo de metodo " + nombreTipoMetodo + " y el metodo " + metodoSelect + " seleccionado");
        }
    }//GEN-LAST:event_btnLocRaicesActionPerformed
    private void actualizarSeleccion(JComboBox comboBoxMetodosDisponibles, String[] metodos, JComboBox comboBoxLocRaices){
        
        if (((String) comboBoxLocRaices.getSelectedItem()).equals("Metodos Cerrados")) {
            comboBoxMetodosDisponibles.removeAllItems();
            for (int i = 0; i < 2; i++) {
                comboBoxMetodosDisponibles.addItem(metodos[i]);
            }
        }if (((String) comboBoxLocRaices.getSelectedItem()).equals("Metodos Abiertos")) {
            comboBoxMetodosDisponibles.removeAllItems();
            for (int i = 2; i < 5; i++) {
                comboBoxMetodosDisponibles.addItem(metodos[i]);
            }
        }
        
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLocRaices;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
